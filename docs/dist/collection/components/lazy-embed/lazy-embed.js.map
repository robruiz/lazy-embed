{"version":3,"file":"lazy-embed.js","sourceRoot":"","sources":["../../../src/components/lazy-embed/lazy-embed.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAOnF,MAAM,OAAO,SAAS;IACpB;;OAEG;IACQ,EAAE,CAAc;IAE3B;;OAEG;IACK,GAAG,CAAS;IAEpB;;OAEG;IACK,YAAY,CAAS;IAE7B;;OAEG;IACK,GAAG,GAAW,eAAe,CAAC;IAEtC;;OAEG;IACK,KAAK,GAAW,MAAM,CAAC;IAE/B;;OAEG;IACK,MAAM,GAAW,MAAM,CAAC;IAEhC;;OAEG;IACK,UAAU,GAAW,EAAE,CAAC;IAEhC;;OAEG;IACK,aAAa,GAAY,KAAK,CAAC;IAEvC;;OAEG;IACK,gBAAgB,GAAW,EAAE,CAAC;IAEtC;;OAEG;IACK,mBAAmB,GAAW,EAAE,CAAC;IAEzC;;OAEG;IACM,MAAM,GAAY,KAAK,CAAC;IAEjC;;OAEG;IACK,QAAQ,CAAuB;IAEvC;;OAEG;IACK,gBAAgB,CAAmB;IAE3C;;OAEG;IACK,oBAAoB,GAAmD,EAAE,CAAC;IAElF;;OAEG;IACK,SAAS,CAIf;IAEF;;OAEG;IACH,iBAAiB;QACf,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;YACvB,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACnC,CAAC;QAED,IAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAC1B,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC/B,CAAC;QAED,IAAI,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC7B,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACrC,CAAC;IACH,CAAC;IAED;;OAEG;IACH,oBAAoB;QAClB,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YAClB,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;QAC7B,CAAC;QAED,IAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAC1B,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC;QACrC,CAAC;QAED,+BAA+B;QAC/B,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,EAAE,EAAE;YACzD,OAAO,CAAC,mBAAmB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;IACjC,CAAC;IAED;;OAEG;IACK,aAAa;QACnB,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;YACd,IAAI,CAAC,SAAS,GAAG;gBACf,IAAI,EAAE,SAAS;gBACf,EAAE,EAAE,EAAE;gBACN,QAAQ,EAAE,EAAE;aACb,CAAC;YACF,OAAO;QACT,CAAC;QAED,uBAAuB;QACvB,MAAM,YAAY,GAAG,6FAA6F,CAAC;QACnH,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QAElD,qBAAqB;QACrB,MAAM,UAAU,GAAG,gEAAgE,CAAC;QACpF,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QAE9C,IAAI,YAAY,IAAI,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC;YACpC,IAAI,CAAC,SAAS,GAAG;gBACf,IAAI,EAAE,SAAS;gBACf,EAAE,EAAE,YAAY,CAAC,CAAC,CAAC;gBACnB,QAAQ,EAAE,iCAAiC,YAAY,CAAC,CAAC,CAAC,aAAa;aACxE,CAAC;QACJ,CAAC;aAAM,IAAI,UAAU,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC;YACvC,IAAI,CAAC,SAAS,GAAG;gBACf,IAAI,EAAE,OAAO;gBACb,EAAE,EAAE,UAAU,CAAC,CAAC,CAAC;gBACjB,QAAQ,EAAE,kCAAkC,UAAU,CAAC,CAAC,CAAC,aAAa;aACvE,CAAC;QACJ,CAAC;aAAM,CAAC;YACN,8CAA8C;YAC9C,IAAI,CAAC,SAAS,GAAG;gBACf,IAAI,EAAE,SAAS;gBACf,EAAE,EAAE,EAAE;gBACN,QAAQ,EAAE,IAAI,CAAC,GAAG;aACnB,CAAC;QACJ,CAAC;IACH,CAAC;IAED,mDAAmD;IAC3C,2BAA2B;QACjC,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC9B,OAAO;QACT,CAAC;QAED,MAAM,eAAe,GAAG,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAE5E,IAAI,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACjC,OAAO,CAAC,IAAI,CAAC,wCAAwC,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;YAClF,OAAO;QACT,CAAC;QAED,eAAe,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YAChC,MAAM,YAAY,GAAG,GAAG,EAAE;gBACxB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;oBACjB,IAAI,CAAC,SAAS,EAAE,CAAC;gBACnB,CAAC;YACH,CAAC,CAAC;YAEF,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;YAChD,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACK,yBAAyB;QAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,oBAAoB,CACtC,CAAC,OAAO,EAAE,EAAE;YACV,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,cAAc,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;gBAC9C,IAAI,CAAC,SAAS,EAAE,CAAC;YACnB,CAAC;QACH,CAAC,EACD;YACE,UAAU,EAAE,OAAO;YACnB,SAAS,EAAE,GAAG;SACf,CACF,CAAC;QAEF,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjC,CAAC;IAED;;OAEG;IACK,qBAAqB;QAC3B,MAAM,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAEpE,IAAI,CAAC,aAAa,EAAE,CAAC;YACnB,OAAO,CAAC,IAAI,CAAC,iCAAiC,IAAI,CAAC,gBAAgB,cAAc,CAAC,CAAC;YACnF,OAAO;QACT,CAAC;QAED,IAAI,CAAC,gBAAgB,GAAG,IAAI,gBAAgB,CAAC,CAAC,SAAS,EAAE,EAAE;YACzD,SAAS,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE;gBAC7B,IACE,QAAQ,CAAC,IAAI,KAAK,YAAY;oBAC9B,CAAC,QAAQ,CAAC,aAAa,KAAK,OAAO,IAAI,QAAQ,CAAC,aAAa,KAAK,OAAO,CAAC,EAC1E,CAAC;oBACD,6CAA6C;oBAC7C,MAAM,aAAa,GAAG,MAAM,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;oBAC7D,IACE,aAAa,CAAC,OAAO,KAAK,MAAM;wBAChC,aAAa,CAAC,UAAU,KAAK,QAAQ;wBACrC,CAAC,IAAI,CAAC,MAAM,EACZ,CAAC;wBACD,IAAI,CAAC,SAAS,EAAE,CAAC;oBACnB,CAAC;gBACH,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,aAAa,EAAE;YAC3C,UAAU,EAAE,IAAI;YAChB,eAAe,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC;SACpC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IAEH,KAAK,CAAC,SAAS;QACb,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;YAC5C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACrB,CAAC;IACH,CAAC;IAED;;OAEG;IAEH,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;YACjB,IAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC;IACH,CAAC;IAED,MAAM;QACJ,MAAM,cAAc,GAAG;YACrB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,MAAM,EAAE,IAAI,CAAC,MAAM,KAAK,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI;YACnD,QAAQ,EAAE,UAAU;SACrB,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;YACjB,OAAO,CACL,WAAK,KAAK,EAAC,sBAAsB,EAAC,KAAK,EAAE,cAAc;gBACrD,WAAK,KAAK,EAAC,mBAAmB;oBAC3B,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CACnB,WACE,GAAG,EAAE,IAAI,CAAC,YAAY,EACtB,GAAG,EAAE,IAAI,CAAC,GAAG,EACb,KAAK,EAAC,eAAe,GACrB,CACH,CAAC,CAAC,CAAC,CACF,WAAK,KAAK,EAAC,aAAa;wBACtB,WAAK,KAAK,EAAC,aAAa,GAAO,CAC3B,CACP;oBACD,WAAK,KAAK,EAAC,cAAc;wBACvB,WAAK,KAAK,EAAC,aAAa,gBAAY,YAAY,GAAO,CACnD,CACF,CACF,CACP,CAAC;QACJ,CAAC;aAAM,CAAC;YACN,OAAO,CACL,WAAK,KAAK,EAAC,sBAAsB,EAAC,KAAK,EAAE,cAAc;gBACrD,WAAK,KAAK,EAAC,kBAAkB;oBAC3B,cACE,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,EAC5B,KAAK,EAAE,IAAI,CAAC,UAAU,IAAI,gBAAgB,EAC1C,WAAW,EAAC,GAAG,EACf,KAAK,EAAC,0FAA0F,EAChG,eAAe,SACP,CACN,CACF,CACP,CAAC;QACJ,CAAC;IACH,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Prop, State, Method, Element, Listen, h } from '@stencil/core';\n\n@Component({\n  tag: 'lazy-embed',\n  styleUrl: 'lazy-embed.css',\n  shadow: true,\n})\nexport class LazyEmbed {\n  /**\n   * Reference to the host element\n   */\n  @Element() el: HTMLElement;\n\n  /**\n   * URL of the video to embed (YouTube, Vimeo, etc.)\n   */\n  @Prop() src: string;\n\n  /**\n   * URL of the preview image to display before loading the video\n   */\n  @Prop() previewImage: string;\n\n  /**\n   * Alternative text for the preview image\n   */\n  @Prop() alt: string = 'Video preview';\n\n  /**\n   * Width of the embed (can be px or %)\n   */\n  @Prop() width: string = '100%';\n\n  /**\n   * Height of the embed (can be px or %)\n   */\n  @Prop() height: string = 'auto';\n\n  /**\n   * Title of the video (for accessibility)\n   */\n  @Prop() videoTitle: string = '';\n\n  /**\n   * Whether to load the video automatically when it becomes visible\n   */\n  @Prop() loadOnVisible: boolean = false;\n\n  /**\n   * Whether to load the video automatically when a parent element with the specified selector is opened\n   */\n  @Prop() loadOnParentOpen: string = '';\n\n  /**\n   * CSS selector for elements that should trigger video loading when clicked\n   */\n  @Prop() loadOnClickSelector: string = '';\n\n  /**\n   * Whether the video has been loaded\n   */\n  @State() loaded: boolean = false;\n\n  /**\n   * IntersectionObserver instance for detecting when the component is visible\n   */\n  private observer: IntersectionObserver;\n\n  /**\n   * MutationObserver instance for detecting when a parent element is opened\n   */\n  private mutationObserver: MutationObserver;\n\n  /**\n   * Store references to elements and their click event handlers\n   */\n  private clickTriggerElements: { element: Element; handler: EventListener }[] = [];\n\n  /**\n   * Parsed video information\n   */\n  private videoInfo: {\n    type: 'youtube' | 'vimeo' | 'unknown';\n    id: string;\n    embedUrl: string;\n  };\n\n  /**\n   * Component lifecycle method that runs when the component is first connected to the DOM\n   */\n  connectedCallback() {\n    this.parseVideoUrl();\n\n    if (this.loadOnVisible) {\n      this.setupIntersectionObserver();\n    }\n\n    if (this.loadOnParentOpen) {\n      this.setupMutationObserver();\n    }\n\n    if (this.loadOnClickSelector) {\n      this.setupExternalClickListeners();\n    }\n  }\n\n  /**\n   * Component lifecycle method that runs when the component is disconnected from the DOM\n   */\n  disconnectedCallback() {\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n\n    if (this.mutationObserver) {\n      this.mutationObserver.disconnect();\n    }\n\n    // Remove click event listeners\n    this.clickTriggerElements.forEach(({ element, handler }) => {\n      element.removeEventListener('click', handler);\n    });\n    this.clickTriggerElements = [];\n  }\n\n  /**\n   * Parse the video URL to extract information needed for embedding\n   */\n  private parseVideoUrl() {\n    if (!this.src) {\n      this.videoInfo = {\n        type: 'unknown',\n        id: '',\n        embedUrl: '',\n      };\n      return;\n    }\n\n    // YouTube URL patterns\n    const youtubeRegex = /(?:youtube\\.com\\/(?:[^\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?\\/\\s]{11})/i;\n    const youtubeMatch = this.src.match(youtubeRegex);\n\n    // Vimeo URL patterns\n    const vimeoRegex = /(?:vimeo\\.com\\/(?:video\\/)?|player\\.vimeo\\.com\\/video\\/)(\\d+)/i;\n    const vimeoMatch = this.src.match(vimeoRegex);\n\n    if (youtubeMatch && youtubeMatch[1]) {\n      this.videoInfo = {\n        type: 'youtube',\n        id: youtubeMatch[1],\n        embedUrl: `https://www.youtube.com/embed/${youtubeMatch[1]}?autoplay=1`,\n      };\n    } else if (vimeoMatch && vimeoMatch[1]) {\n      this.videoInfo = {\n        type: 'vimeo',\n        id: vimeoMatch[1],\n        embedUrl: `https://player.vimeo.com/video/${vimeoMatch[1]}?autoplay=1`,\n      };\n    } else {\n      // For other embed types, use the src directly\n      this.videoInfo = {\n        type: 'unknown',\n        id: '',\n        embedUrl: this.src,\n      };\n    }\n  }\n\n  // Add a new method to set up click event listeners\n  private setupExternalClickListeners() {\n    if (!this.loadOnClickSelector) {\n      return;\n    }\n\n    const triggerElements = document.querySelectorAll(this.loadOnClickSelector);\n\n    if (triggerElements.length === 0) {\n      console.warn(`No elements found matching selector \"${this.loadOnClickSelector}\"`);\n      return;\n    }\n\n    triggerElements.forEach(element => {\n      const clickHandler = () => {\n        if (!this.loaded) {\n          this.loadVideo();\n        }\n      };\n\n      element.addEventListener('click', clickHandler);\n      this.clickTriggerElements.push({ element, handler: clickHandler });\n    });\n  }\n\n  /**\n   * Set up IntersectionObserver to detect when the component is visible\n   */\n  private setupIntersectionObserver() {\n    this.observer = new IntersectionObserver(\n      (entries) => {\n        if (entries[0].isIntersecting && !this.loaded) {\n          this.loadVideo();\n        }\n      },\n      {\n        rootMargin: '100px',\n        threshold: 0.1,\n      }\n    );\n\n    this.observer.observe(this.el);\n  }\n\n  /**\n   * Set up MutationObserver to detect when a parent element is opened\n   */\n  private setupMutationObserver() {\n    const parentElement = document.querySelector(this.loadOnParentOpen);\n\n    if (!parentElement) {\n      console.warn(`Parent element with selector \"${this.loadOnParentOpen}\" not found.`);\n      return;\n    }\n\n    this.mutationObserver = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (\n          mutation.type === 'attributes' &&\n          (mutation.attributeName === 'class' || mutation.attributeName === 'style')\n        ) {\n          // Check if the parent element is now visible\n          const computedStyle = window.getComputedStyle(parentElement);\n          if (\n            computedStyle.display !== 'none' &&\n            computedStyle.visibility !== 'hidden' &&\n            !this.loaded\n          ) {\n            this.loadVideo();\n          }\n        }\n      });\n    });\n\n    this.mutationObserver.observe(parentElement, {\n      attributes: true,\n      attributeFilter: ['class', 'style'],\n    });\n  }\n\n  /**\n   * Load the video by replacing the preview image with the embed iframe\n   */\n  @Method()\n  async loadVideo() {\n    if (!this.loaded && this.videoInfo.embedUrl) {\n      this.loaded = true;\n    }\n  }\n\n  /**\n   * Listen for click events on the preview image\n   */\n  @Listen('click')\n  handleClick() {\n    if (!this.loaded) {\n      this.loadVideo();\n    }\n  }\n\n  render() {\n    const containerStyle = {\n      width: this.width,\n      height: this.height !== 'auto' ? this.height : null,\n      position: 'relative',\n    };\n\n    if (!this.loaded) {\n      return (\n        <div class=\"lazy-embed-container\" style={containerStyle}>\n          <div class=\"preview-container\">\n            {this.previewImage ? (\n              <img\n                src={this.previewImage}\n                alt={this.alt}\n                class=\"preview-image\"\n              />\n            ) : (\n              <div class=\"placeholder\">\n                <div class=\"play-button\"></div>\n              </div>\n            )}\n            <div class=\"play-overlay\">\n              <div class=\"play-button\" aria-label=\"Play video\"></div>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div class=\"lazy-embed-container\" style={containerStyle}>\n          <div class=\"embed-responsive\">\n            <iframe\n              src={this.videoInfo.embedUrl}\n              title={this.videoTitle || 'Embedded video'}\n              frameborder=\"0\"\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n              allowfullScreen\n            ></iframe>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n"]}